server {
    listen 80 default_server;
    server_name localhost;

    # Add timeout settings
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;
    send_timeout 300s;

    location = /favicon.ico { access_log off; log_not_found off; }

    location /static/ {
        alias /app/newsloom/static/;
    }


    location / {
        root /app/dist;  
        try_files $uri /index.html;  
    }

    location /media/ {
        alias /app/newsloom/media/;
    }

    location /ws/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
    }

    location /token/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location /api/ {
    proxy_pass http://127.0.0.1:8000;  # Forward requests to Django backend
    proxy_set_header Host $host;  # Pass the original host header to the backend
    proxy_set_header X-Real-IP $remote_addr;  # Pass the real client IP to the backend
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Maintain the original X-Forwarded-For header
    proxy_set_header X-Forwarded-Proto $scheme;  # Pass protocol (http or https)

    # Allow all CORS requests (no restriction on origin, methods, or headers)
    add_header 'Access-Control-Allow-Origin' '*';  # Allow any origin
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS';  # Allow all common HTTP methods
    add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, X-Real-IP, X-Forwarded-For';  # Allow common headers
    add_header 'Access-Control-Allow-Credentials' 'true';  # Allow credentials if needed

    # Handle pre-flight OPTIONS requests properly
    if ($request_method = 'OPTIONS') {
        return 204;  # Return 204 No Content for OPTIONS pre-flight requests
    }

    # Ensure headers are always included in the response
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, X-Real-IP, X-Forwarded-For' always;
    add_header 'Access-Control-Allow-Origin' '*' always;
}

}
